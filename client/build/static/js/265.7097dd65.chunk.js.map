{"version":3,"file":"static/js/265.7097dd65.chunk.js","mappings":"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","sources":["components/hook-form/FormProvider.js","components/Image/Image.js","components/upload/preview/AvatarPreview.js","components/upload/UploadAvatar.js","components/hook-form/RHFUpload.js","components/hook-form/RHFTextField.js","components/hook-form/RHFCodes.js","sections/auth/VerifyForm.js","pages/auth/Verify.js","sections/auth/AuthSocial.js","sections/auth/LoginForm.js"],"sourcesContent":["import PropTypes from 'prop-types';\r\n// form\r\nimport { FormProvider as Form } from 'react-hook-form';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nFormProvider.propTypes = {\r\n  children: PropTypes.node,\r\n  methods: PropTypes.object,\r\n  onSubmit: PropTypes.func,\r\n};\r\n\r\nexport default function FormProvider({ children, onSubmit, methods }) {\r\n  return (\r\n    <Form {...methods}>\r\n      <form onSubmit={onSubmit}>{children}</form>\r\n    </Form>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { forwardRef } from 'react';\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\n// @mui\r\nimport { Box } from '@mui/material';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst Image = forwardRef(\r\n  ({ disabledEffect = false, effect = 'blur', sx, ...other }, ref) => {\r\n    const content = (\r\n      <Box\r\n        component={LazyLoadImage}\r\n        wrapperClassName=\"wrapper\"\r\n        effect={disabledEffect ? undefined : effect}\r\n        placeholderSrc={disabledEffect ? '/assets/transparent.png' : '/assets/placeholder.svg'}\r\n        sx={{ width: 1, height: 1, objectFit: 'cover' }}\r\n        {...other}\r\n      />\r\n    );\r\n\r\n    return (\r\n      <Box\r\n        ref={ref}\r\n        component=\"span\"\r\n        sx={{\r\n          lineHeight: 1,\r\n          display: 'block',\r\n          overflow: 'hidden',\r\n          position: 'relative',\r\n          '& .wrapper': {\r\n            width: 1,\r\n            height: 1,\r\n            backgroundSize: 'cover !important',\r\n          },\r\n          ...sx,\r\n        }}\r\n      >\r\n        {content}\r\n      </Box>\r\n    );\r\n  }\r\n);\r\n\r\nImage.propTypes = {\r\n  sx: PropTypes.object,\r\n  effect: PropTypes.string,\r\n  disabledEffect: PropTypes.bool,\r\n};\r\n\r\nexport default Image;\r\n","import PropTypes from 'prop-types';\r\n//\r\nimport Image from '../../Image';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nAvatarPreview.propTypes = {\r\n  file: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\r\n};\r\n\r\nexport default function AvatarPreview({ file }) {\r\n  if (!file) {\r\n    return null;\r\n  }\r\n\r\n  const imgUrl = typeof file === 'string' ? file : file.preview;\r\n\r\n  return (\r\n    <Image\r\n      alt=\"avatar\"\r\n      src={imgUrl}\r\n      sx={{\r\n        zIndex: 8,\r\n        overflow: 'hidden',\r\n        borderRadius: '50%',\r\n        position: 'absolute',\r\n        width: `calc(100% - 16px)`,\r\n        height: `calc(100% - 16px)`,\r\n      }}\r\n    />\r\n  );\r\n}\r\n","import PropTypes from \"prop-types\";\r\nimport { useDropzone } from \"react-dropzone\";\r\n// @mui\r\nimport { Typography } from \"@mui/material\";\r\nimport { styled, alpha } from \"@mui/material/styles\";\r\n//\r\nimport AvatarPreview from \"./preview/AvatarPreview\";\r\nimport { Image } from \"phosphor-react\";\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst StyledDropZone = styled(\"div\")(({ theme }) => ({\r\n  width: 144,\r\n  height: 144,\r\n  margin: \"auto\",\r\n  display: \"flex\",\r\n  cursor: \"pointer\",\r\n  overflow: \"hidden\",\r\n  borderRadius: \"50%\",\r\n  alignItems: \"center\",\r\n  position: \"relative\",\r\n  justifyContent: \"center\",\r\n  border: `1px dashed ${alpha(theme.palette.grey[500], 0.32)}`,\r\n}));\r\n\r\nconst StyledPlaceholder = styled(\"div\")(({ theme }) => ({\r\n  zIndex: 7,\r\n  display: \"flex\",\r\n  borderRadius: \"50%\",\r\n  position: \"absolute\",\r\n  alignItems: \"center\",\r\n  flexDirection: \"column\",\r\n  justifyContent: \"center\",\r\n  width: `calc(100% - 16px)`,\r\n  height: `calc(100% - 16px)`,\r\n  color: theme.palette.text.disabled,\r\n  backgroundColor: theme.palette.background.neutral,\r\n  transition: theme.transitions.create(\"opacity\", {\r\n    easing: theme.transitions.easing.easeInOut,\r\n    duration: theme.transitions.duration.shorter,\r\n  }),\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nUploadAvatar.propTypes = {\r\n  sx: PropTypes.object,\r\n  error: PropTypes.bool,\r\n  disabled: PropTypes.bool,\r\n  helperText: PropTypes.node,\r\n  file: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\r\n};\r\n\r\nexport default function UploadAvatar({\r\n  error,\r\n  file,\r\n  disabled,\r\n  helperText,\r\n  sx,\r\n  ...other\r\n}) {\r\n  const {\r\n    getRootProps,\r\n    getInputProps,\r\n    isDragActive,\r\n    isDragReject,\r\n  } = useDropzone({\r\n    multiple: false,\r\n    disabled,\r\n    ...other,\r\n  });\r\n\r\n  const hasFile = !!file;\r\n\r\n  const isError = isDragReject || !!error;\r\n\r\n  return (\r\n    <>\r\n      <StyledDropZone\r\n        {...getRootProps()}\r\n        sx={{\r\n          ...(isDragActive && {\r\n            opacity: 0.72,\r\n          }),\r\n          ...(isError && {\r\n            borderColor: \"error.light\",\r\n            ...(hasFile && {\r\n              bgcolor: \"error.lighter\",\r\n            }),\r\n          }),\r\n          ...(disabled && {\r\n            opacity: 0.48,\r\n            pointerEvents: \"none\",\r\n          }),\r\n          ...(hasFile && {\r\n            \"&:hover\": {\r\n              \"& .placeholder\": {\r\n                opacity: 1,\r\n              },\r\n            },\r\n          }),\r\n          ...sx,\r\n        }}\r\n      >\r\n        <input {...getInputProps()} />\r\n\r\n        {hasFile && <AvatarPreview file={file} />}\r\n\r\n        <StyledPlaceholder\r\n          className=\"placeholder\"\r\n          sx={{\r\n            \"&:hover\": {\r\n              opacity: 0.72,\r\n            },\r\n            ...(hasFile && {\r\n              zIndex: 9,\r\n              opacity: 0,\r\n              color: \"common.white\",\r\n              bgcolor: (theme) => alpha(theme.palette.grey[900], 0.64),\r\n            }),\r\n            ...(isError && {\r\n              color: \"error.main\",\r\n              bgcolor: \"error.lighter\",\r\n            }),\r\n          }}\r\n        >\r\n          <Image />\r\n\r\n          <Typography variant=\"caption\">\r\n            {file ? \"Update photo\" : \"Upload photo\"}\r\n          </Typography>\r\n        </StyledPlaceholder>\r\n      </StyledDropZone>\r\n\r\n      {helperText && helperText}\r\n    </>\r\n  );\r\n}","import PropTypes from 'prop-types';\r\n// form\r\nimport { useFormContext, Controller } from 'react-hook-form';\r\n// @mui\r\nimport { FormHelperText } from '@mui/material';\r\n//\r\nimport { UploadAvatar } from '../upload';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nRHFUploadAvatar.propTypes = {\r\n  name: PropTypes.string,\r\n};\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport function RHFUploadAvatar({ name, ...other }) {\r\n  const { control } = useFormContext();\r\n\r\n  return (\r\n    <Controller\r\n      name={name}\r\n      control={control}\r\n      render={({ field, fieldState: { error } }) => (\r\n        <div>\r\n          <UploadAvatar\r\n            accept={{\r\n              'image/*': [],\r\n            }}\r\n            error={!!error}\r\n            file={field.value}\r\n            {...other}\r\n          />\r\n\r\n          {!!error && (\r\n            <FormHelperText error sx={{ px: 2, textAlign: 'center' }}>\r\n              {error.message}\r\n            </FormHelperText>\r\n          )}\r\n        </div>\r\n      )}\r\n    />\r\n  );\r\n}\r\n\r\n","import PropTypes from 'prop-types';\r\n// form\r\nimport { useFormContext, Controller } from 'react-hook-form';\r\n// @mui\r\nimport { TextField } from '@mui/material';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nRHFTextField.propTypes = {\r\n  name: PropTypes.string,\r\n  helperText: PropTypes.node,\r\n};\r\n\r\nexport default function RHFTextField({ name, helperText, ...other }) {\r\n  const { control } = useFormContext();\r\n\r\n  return (\r\n    <Controller\r\n      name={name}\r\n      control={control}\r\n      render={({ field, fieldState: { error } }) => (\r\n        <TextField\r\n          {...field}\r\n          fullWidth\r\n          \r\n          value={typeof field.value === 'number' && field.value === 0 ? '' : field.value}\r\n          error={!!error}\r\n          helperText={error ? error?.message : helperText}\r\n          {...other}\r\n        />\r\n      )}\r\n    />\r\n  );\r\n}\r\n","\r\nimport { useRef } from \"react\";\r\n// form\r\nimport { useFormContext, Controller } from \"react-hook-form\";\r\n// @mui\r\nimport { Stack, TextField } from \"@mui/material\";\r\n\r\n\r\nexport default function RHFCodes({ keyName = \"\", inputs = [], ...other }) {\r\n  const codesRef = useRef(null);\r\n\r\n  const { control } = useFormContext();\r\n\r\n  const handleChangeWithNextField = (event, handleChange) => {\r\n    const { maxLength, value, name } = event.target;\r\n\r\n    const fieldIndex = name.replace(keyName, \"\");\r\n\r\n    const fieldIntIndex = Number(fieldIndex);\r\n\r\n    const nextfield = document.querySelector(\r\n      `input[name=${keyName}${fieldIntIndex + 1}]`\r\n    );\r\n\r\n    if (value.length > maxLength) {\r\n      event.target.value = value[0];\r\n    }\r\n\r\n    if (value.length >= maxLength && fieldIntIndex < 6 && nextfield !== null) {\r\n      nextfield.focus();\r\n    }\r\n\r\n    handleChange(event);\r\n  };\r\n\r\n  return (\r\n    <Stack direction=\"row\" spacing={2} justifyContent=\"center\" ref={codesRef}>\r\n      {inputs.map((name, index) => (\r\n        <Controller\r\n          key={name}\r\n          name={`${keyName}${index + 1}`}\r\n          control={control}\r\n          render={({ field, fieldState: { error } }) => (\r\n            <TextField\r\n              {...field}\r\n              error={!!error}\r\n              autoFocus={index === 0}\r\n              placeholder=\"-\"\r\n              onChange={(event) => {\r\n                handleChangeWithNextField(event, field.onChange);\r\n              }}\r\n              onFocus={(event) => event.currentTarget.select()}\r\n              InputProps={{\r\n                sx: {\r\n                  width: { xs: 36, sm: 56 },\r\n                  height: { xs: 36, sm: 56 },\r\n                  \"& input\": { p: 0, textAlign: \"center\" },\r\n                },\r\n              }}\r\n              inputProps={{\r\n                maxLength: 1,\r\n                type: \"number\",\r\n              }}\r\n              {...other}\r\n            />\r\n          )}\r\n        />\r\n      ))}\r\n    </Stack>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\nimport * as Yup from \"yup\";\r\n// form\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\n// @mui\r\nimport { Stack, IconButton, InputAdornment, Button } from \"@mui/material\";\r\n// components\r\nimport FormProvider, { RHFTextField } from \"../../components/hook-form\";\r\nimport { Eye, EyeSlash } from \"phosphor-react\";\r\nimport RHFCodes from \"../../components/hook-form/RHFCodes\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { VerifyEmail } from \"../../redux/slices/auth\";\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function VerifyForm() {\r\n  const dispatch = useDispatch();\r\n  const { email } = useSelector((state) => state.auth);\r\n  const VerifyCodeSchema = Yup.object().shape({\r\n    code1: Yup.string().required(\"Code is required\"),\r\n    code2: Yup.string().required(\"Code is required\"),\r\n    code3: Yup.string().required(\"Code is required\"),\r\n    code4: Yup.string().required(\"Code is required\"),\r\n    code5: Yup.string().required(\"Code is required\"),\r\n    code6: Yup.string().required(\"Code is required\"),\r\n  });\r\n\r\n  const defaultValues = {\r\n    code1: \"\",\r\n    code2: \"\",\r\n    code3: \"\",\r\n    code4: \"\",\r\n    code5: \"\",\r\n    code6: \"\",\r\n  };\r\n\r\n  const methods = useForm({\r\n    mode: \"onChange\",\r\n    resolver: yupResolver(VerifyCodeSchema),\r\n    defaultValues,\r\n  });\r\n\r\n  const {\r\n    handleSubmit,\r\n    formState: { isSubmitting, errors },\r\n  } = methods;\r\n\r\n  const onSubmit = async (data) => {\r\n    try {\r\n      //   Send API Request\r\n      dispatch(\r\n        VerifyEmail({\r\n          email,\r\n          otp: `${data.code1}${data.code2}${data.code3}${data.code4}${data.code5}${data.code6}`,\r\n        })\r\n      );\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\r\n      <Stack spacing={3}>\r\n        <RHFCodes\r\n          keyName=\"code\"\r\n          inputs={[\"code1\", \"code2\", \"code3\", \"code4\", \"code5\", \"code6\"]}\r\n        />\r\n\r\n        <Button\r\n          fullWidth\r\n          size=\"large\"\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n          sx={{\r\n            mt: 3,\r\n            bgcolor: \"text.primary\",\r\n            color: (theme) =>\r\n              theme.palette.mode === \"light\" ? \"common.white\" : \"grey.800\",\r\n            \"&:hover\": {\r\n              bgcolor: \"text.primary\",\r\n              color: (theme) =>\r\n                theme.palette.mode === \"light\" ? \"common.white\" : \"grey.800\",\r\n            },\r\n          }}\r\n        >\r\n          Verify\r\n        </Button>\r\n      </Stack>\r\n    </FormProvider>\r\n  );\r\n}\r\n","import { Link as RouterLink } from \"react-router-dom\";\r\n// sections\r\nimport { Stack, Typography, Link } from \"@mui/material\";\r\nimport AuthSocial from \"../../sections/auth/AuthSocial\";\r\nimport Login from \"../../sections/auth/LoginForm\";\r\nimport VerifyForm from \"../../sections/auth/VerifyForm\";\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function LoginPage() {\r\n  return (\r\n    <>\r\n      <Stack spacing={2} sx={{ mb: 5, position: \"relative\" }}>\r\n        <Typography variant=\"h4\">Please Verify OTP</Typography>\r\n\r\n        <Stack direction=\"row\" spacing={0.5}>\r\n          <Typography variant=\"body2\">\r\n            Sent to email (shreyanshshah242@gmail.com)\r\n          </Typography>\r\n        </Stack>\r\n      </Stack>\r\n      {/* Form */}\r\n      <VerifyForm />\r\n    </>\r\n  );\r\n}\r\n","// @mui\r\nimport { Divider, IconButton, Stack } from '@mui/material';\r\nimport { GithubLogo, GoogleLogo, TwitterLogo } from 'phosphor-react';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function AuthSocial() {\r\n\r\n\r\n  const handleGoogleLogin = async () => {\r\n\r\n  };\r\n\r\n  const handleGithubLogin = async () => {\r\n    \r\n  };\r\n\r\n  const handleTwitterLogin = async () => {\r\n    \r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Divider\r\n        sx={{\r\n          my: 2.5,\r\n          typography: 'overline',\r\n          color: 'text.disabled',\r\n          '&::before, ::after': {\r\n            borderTopStyle: 'dashed',\r\n          },\r\n        }}\r\n      >\r\n        OR\r\n      </Divider>\r\n\r\n      <Stack direction=\"row\" justifyContent=\"center\" spacing={2}>\r\n        <IconButton onClick={handleGoogleLogin}>\r\n          <GoogleLogo color=\"#DF3E30\" />\r\n        </IconButton>\r\n\r\n        <IconButton color=\"inherit\" onClick={handleGithubLogin}>\r\n          <GithubLogo />\r\n        </IconButton>\r\n\r\n        <IconButton onClick={handleTwitterLogin}>\r\n          <TwitterLogo color=\"#1C9CEA\" />\r\n        </IconButton>\r\n      </Stack>\r\n    </div>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\n// form\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\n// @mui\r\nimport { Link, Stack, Alert, IconButton, InputAdornment } from \"@mui/material\";\r\nimport { LoadingButton } from \"@mui/lab\";\r\n// components\r\nimport FormProvider, { RHFTextField } from \"../../components/hook-form\";\r\nimport { Eye, EyeSlash } from \"phosphor-react\";\r\nimport { LoginUser } from \"../../redux/slices/auth\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function AuthLoginForm() {\r\n  const dispatch = useDispatch();\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n  const {isLoading} = useSelector((state) => state.auth);\r\n\r\n  const LoginSchema = Yup.object().shape({\r\n    email: Yup.string()\r\n      .required(\"Email is required\")\r\n      .email(\"Email must be a valid email address\"),\r\n    password: Yup.string().required(\"Password is required\"),\r\n  });\r\n\r\n  const defaultValues = {\r\n    email: \"demo@tawk.com\",\r\n    password: \"demo1234\",\r\n  };\r\n\r\n  const methods = useForm({\r\n    resolver: yupResolver(LoginSchema),\r\n    defaultValues,\r\n  });\r\n\r\n  const {\r\n    reset,\r\n    setError,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = methods;\r\n\r\n  const onSubmit = async (data) => {\r\n    try {\r\n      console.log(data);\r\n      // submit data to backend\r\n      dispatch(LoginUser(data));\r\n    } catch (error) {\r\n      console.error(error);\r\n      reset();\r\n      setError(\"afterSubmit\", {\r\n        ...error,\r\n        message: error.message,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\r\n      <Stack spacing={3}>\r\n        {!!errors.afterSubmit && (\r\n          <Alert severity=\"error\">{errors.afterSubmit.message}</Alert>\r\n        )}\r\n\r\n        <RHFTextField name=\"email\" label=\"Email address\" />\r\n\r\n        <RHFTextField\r\n          name=\"password\"\r\n          label=\"Password\"\r\n          type={showPassword ? \"text\" : \"password\"}\r\n          InputProps={{\r\n            endAdornment: (\r\n              <InputAdornment position=\"end\">\r\n                <IconButton\r\n                  onClick={() => setShowPassword(!showPassword)}\r\n                  edge=\"end\"\r\n                >\r\n                  {showPassword ? <Eye /> : <EyeSlash />}\r\n                </IconButton>\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n        />\r\n      </Stack>\r\n\r\n      <Stack alignItems=\"flex-end\" sx={{ my: 2 }}>\r\n        <Link component={RouterLink} to=\"/auth/reset-password\" variant=\"body2\" color=\"inherit\" underline=\"always\">\r\n          Forgot password?\r\n        </Link>\r\n      </Stack>\r\n\r\n      <LoadingButton\r\n        fullWidth\r\n        color=\"inherit\"\r\n        size=\"large\"\r\n        type=\"submit\"\r\n        variant=\"contained\"\r\n        loading={isLoading}\r\n        sx={{\r\n          bgcolor: \"text.primary\",\r\n          color: (theme) =>\r\n            theme.palette.mode === \"light\" ? \"common.white\" : \"grey.800\",\r\n          \"&:hover\": {\r\n            bgcolor: \"text.primary\",\r\n            color: (theme) =>\r\n              theme.palette.mode === \"light\" ? \"common.white\" : \"grey.800\",\r\n          },\r\n        }}\r\n      >\r\n        Login\r\n      </LoadingButton>\r\n    </FormProvider>\r\n  );\r\n}\r\n"],"names":["FormProvider","children","onSubmit","methods","forwardRef","ref","disabledEffect","effect","sx","other","content","Box","component","LazyLoadImage","wrapperClassName","undefined","placeholderSrc","width","height","objectFit","lineHeight","display","overflow","position","backgroundSize","AvatarPreview","file","imgUrl","preview","alt","src","zIndex","borderRadius","StyledDropZone","styled","theme","margin","cursor","alignItems","justifyContent","border","alpha","palette","grey","StyledPlaceholder","flexDirection","color","text","disabled","backgroundColor","background","neutral","transition","transitions","create","easing","easeInOut","duration","shorter","UploadAvatar","error","helperText","getRootProps","getInputProps","isDragActive","isDragReject","useDropzone","multiple","hasFile","isError","opacity","borderColor","bgcolor","pointerEvents","className","Typography","variant","RHFUploadAvatar","name","control","useFormContext","render","field","fieldState","accept","value","FormHelperText","px","textAlign","message","RHFTextField","TextField","fullWidth","RHFCodes","keyName","inputs","codesRef","useRef","Stack","direction","spacing","map","index","autoFocus","placeholder","onChange","event","handleChange","maxLength","target","fieldIndex","replace","fieldIntIndex","Number","nextfield","document","querySelector","length","focus","handleChangeWithNextField","onFocus","currentTarget","select","InputProps","xs","sm","p","inputProps","type","VerifyForm","dispatch","useDispatch","email","useSelector","state","auth","VerifyCodeSchema","Yup","shape","code1","required","code2","code3","code4","code5","code6","useForm","mode","resolver","yupResolver","defaultValues","handleSubmit","formState","isSubmitting","errors","async","VerifyEmail","otp","data","console","Button","size","mt","LoginPage","mb","AuthSocial","my","typography","borderTopStyle","onClick","AuthLoginForm","showPassword","setShowPassword","useState","isLoading","LoginSchema","password","reset","setError","log","LoginUser","afterSubmit","severity","label","endAdornment","edge","RouterLink","to","underline","loading"],"sourceRoot":""}
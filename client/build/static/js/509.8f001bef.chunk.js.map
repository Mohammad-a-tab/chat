{"version":3,"file":"static/js/509.8f001bef.chunk.js","mappings":"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","sources":["components/ChatElement.js","components/Search/Search.js","components/Search/SearchIconWrapper.js","components/Search/StyledInputBase.js","layouts/dashboard/BottomNav.js","components/UserElement.js","sections/dashboard/Friends.js","pages/dashboard/Chats.js"],"sourcesContent":["import React from \"react\";\r\nimport { Box, Badge, Stack, Avatar, Typography } from \"@mui/material\";\r\nimport { styled, useTheme, alpha } from \"@mui/material/styles\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { SelectConversation } from \"../redux/slices/app\";\r\n\r\nconst truncateText = (string, n) => {\r\n  return string?.length > n ? `${string?.slice(0, n)}...` : string;\r\n};\r\n\r\nconst StyledChatBox = styled(Box)(({ theme }) => ({\r\n  \"&:hover\": {\r\n    cursor: \"pointer\",\r\n  },\r\n}));\r\n\r\nconst StyledBadge = styled(Badge)(({ theme }) => ({\r\n  \"& .MuiBadge-badge\": {\r\n    backgroundColor: \"#44b700\",\r\n    color: \"#44b700\",\r\n    boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\r\n    \"&::after\": {\r\n      position: \"absolute\",\r\n      top: 0,\r\n      left: 0,\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      borderRadius: \"50%\",\r\n      animation: \"ripple 1.2s infinite ease-in-out\",\r\n      border: \"1px solid currentColor\",\r\n      content: '\"\"',\r\n    },\r\n  },\r\n  \"@keyframes ripple\": {\r\n    \"0%\": {\r\n      transform: \"scale(.8)\",\r\n      opacity: 1,\r\n    },\r\n    \"100%\": {\r\n      transform: \"scale(2.4)\",\r\n      opacity: 0,\r\n    },\r\n  },\r\n}));\r\n\r\nconst ChatElement = ({ img, name, msg, time, unread, online, id }) => {\r\n  const dispatch = useDispatch();\r\n  const {room_id} = useSelector((state) => state.app);\r\n  const selectedChatId = room_id?.toString();\r\n\r\n  let isSelected = +selectedChatId === id;\r\n\r\n  if (!selectedChatId) {\r\n    isSelected = false;\r\n  }\r\n\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <StyledChatBox\r\n      onClick={() => {\r\n        dispatch(SelectConversation({room_id: id}));\r\n      }}\r\n      sx={{\r\n        width: \"100%\",\r\n\r\n        borderRadius: 1,\r\n\r\n        backgroundColor: isSelected\r\n          ? theme.palette.mode === \"light\"\r\n            ? alpha(theme.palette.primary.main, 0.5)\r\n            : theme.palette.primary.main\r\n          : theme.palette.mode === \"light\"\r\n          ? \"#fff\"\r\n          : theme.palette.background.paper,\r\n      }}\r\n      p={2}\r\n    >\r\n      <Stack\r\n        direction=\"row\"\r\n        alignItems={\"center\"}\r\n        justifyContent=\"space-between\"\r\n      >\r\n        <Stack direction=\"row\" spacing={2}>\r\n          {\" \"}\r\n          {online ? (\r\n            <StyledBadge\r\n              overlap=\"circular\"\r\n              anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\r\n              variant=\"dot\"\r\n            >\r\n              <Avatar alt={name} src={img} />\r\n            </StyledBadge>\r\n          ) : (\r\n            <Avatar alt={name} src={img} />\r\n          )}\r\n          <Stack spacing={0.3}>\r\n            <Typography variant=\"subtitle2\">{name}</Typography>\r\n            <Typography variant=\"caption\">{truncateText(msg, 20)}</Typography>\r\n          </Stack>\r\n        </Stack>\r\n        <Stack spacing={2} alignItems={\"center\"}>\r\n          <Typography sx={{ fontWeight: 600 }} variant=\"caption\">\r\n            {time}\r\n          </Typography>\r\n          <Badge\r\n            className=\"unread-count\"\r\n            color=\"primary\"\r\n            badgeContent={unread}\r\n          />\r\n        </Stack>\r\n      </Stack>\r\n    </StyledChatBox>\r\n  );\r\n};\r\n\r\nexport default ChatElement;\r\n","import { styled, alpha } from \"@mui/material/styles\";\r\n\r\nconst Search = styled(\"div\")(({ theme }) => ({\r\n  position: \"relative\",\r\n  borderRadius: 20,\r\n  backgroundColor: alpha(theme.palette.background.paper, 1),\r\n  marginRight: theme.spacing(2),\r\n  marginLeft: 0,\r\n  width: \"100%\",\r\n}));\r\n\r\nexport default Search;\r\n","import { styled } from \"@mui/material/styles\";  \r\n\r\nconst SearchIconWrapper = styled(\"div\")(({ theme }) => ({\r\n    padding: theme.spacing(0, 2),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  }));\r\n\r\n  export default SearchIconWrapper;\r\n  ","import { InputBase } from \"@mui/material\";\r\nimport {styled} from \"@mui/material/styles\";\r\n\r\n\r\n  const StyledInputBase = styled(InputBase)(({ theme }) => ({\r\n    color: \"inherit\",\r\n    \"& .MuiInputBase-input\": {\r\n      padding: theme.spacing(1, 1, 1, 0),\r\n      // vertical padding + font size from searchIcon\r\n      paddingLeft: `calc(1em + ${theme.spacing(4)})`,\r\n      width: \"100%\",\r\n    },\r\n  }));\r\n\r\n  export default StyledInputBase;","import React from \"react\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport { Box, IconButton, Stack } from \"@mui/material\";\r\nimport ProfileMenu from \"./ProfileMenu\";\r\nimport { Nav_Buttons } from \"../../data\";\r\n\r\nconst BottomNav = () => {\r\n  const theme = useTheme();\r\n\r\n  const [selectedTab, setSelectedTab] = React.useState(0);\r\n\r\n  const handleChangeTab = (index) => {\r\n    setSelectedTab(index);\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        zIndex: 10,\r\n        position: \"absolute\",\r\n        bottom: 0,\r\n        width: \"100vw\",\r\n\r\n        backgroundColor: theme.palette.background.paper,\r\n        boxShadow: \"0px 0px 2px rgba(0, 0, 0, 0.25)\",\r\n      }}\r\n    >\r\n      <Stack\r\n        sx={{ width: \"100%\" }}\r\n        direction=\"row\"\r\n        alignItems={\"center\"}\r\n        justifyContent=\"space-between\"\r\n        spacing={2}\r\n        p={2}\r\n      >\r\n        {Nav_Buttons.map((el) => {\r\n          return el.index === selectedTab ? (\r\n            <Box sx={{ backgroundColor: theme.palette.primary.main, borderRadius: 1.5 }} p={1}>\r\n              <IconButton sx={{ width: \"max-content\", color: \"#ffffff\" }}>\r\n                {el.icon}\r\n              </IconButton>\r\n            </Box>\r\n          ) : (\r\n            <IconButton\r\n              onClick={() => {\r\n                handleChangeTab(el.index);\r\n              }}\r\n              sx={{\r\n                width: \"max-content\",\r\n                color:\r\n                  theme.palette.mode === \"light\"\r\n                    ? \"#080707\"\r\n                    : theme.palette.text.primary,\r\n              }}\r\n            >\r\n              {el.icon}\r\n            </IconButton>\r\n          );\r\n        })}\r\n        <ProfileMenu />\r\n      </Stack>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default BottomNav;\r\n","import React from \"react\";\r\nimport {\r\n  Box,\r\n  Badge,\r\n  Stack,\r\n  Avatar,\r\n  Typography,\r\n  IconButton,\r\n  Button,\r\n} from \"@mui/material\";\r\nimport { styled, useTheme } from \"@mui/material/styles\";\r\nimport { Chat } from \"phosphor-react\";\r\nimport { socket } from \"../socket\";\r\n\r\nconst user_id = window.localStorage.getItem(\"user_id\");\r\n\r\nconst StyledChatBox = styled(Box)(({ theme }) => ({\r\n  \"&:hover\": {\r\n    cursor: \"pointer\",\r\n  },\r\n}));\r\n\r\nconst StyledBadge = styled(Badge)(({ theme }) => ({\r\n  \"& .MuiBadge-badge\": {\r\n    backgroundColor: \"#44b700\",\r\n    color: \"#44b700\",\r\n    boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\r\n    \"&::after\": {\r\n      position: \"absolute\",\r\n      top: 0,\r\n      left: 0,\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      borderRadius: \"50%\",\r\n      animation: \"ripple 1.2s infinite ease-in-out\",\r\n      border: \"1px solid currentColor\",\r\n      content: '\"\"',\r\n    },\r\n  },\r\n  \"@keyframes ripple\": {\r\n    \"0%\": {\r\n      transform: \"scale(.8)\",\r\n      opacity: 1,\r\n    },\r\n    \"100%\": {\r\n      transform: \"scale(2.4)\",\r\n      opacity: 0,\r\n    },\r\n  },\r\n}));\r\n\r\nconst UserElement = ({ img, firstName, lastName, online, _id }) => {\r\n  const theme = useTheme();\r\n\r\n  const name = `${firstName} ${lastName}`;\r\n\r\n  return (\r\n    <StyledChatBox\r\n      sx={{\r\n        width: \"100%\",\r\n\r\n        borderRadius: 1,\r\n\r\n        backgroundColor: theme.palette.background.paper,\r\n      }}\r\n      p={2}\r\n    >\r\n      <Stack\r\n        direction=\"row\"\r\n        alignItems={\"center\"}\r\n        justifyContent=\"space-between\"\r\n      >\r\n        <Stack direction=\"row\" alignItems={\"center\"} spacing={2}>\r\n          {\" \"}\r\n          {online ? (\r\n            <StyledBadge\r\n              overlap=\"circular\"\r\n              anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\r\n              variant=\"dot\"\r\n            >\r\n              <Avatar alt={name} src={img} />\r\n            </StyledBadge>\r\n          ) : (\r\n            <Avatar alt={name} src={img} />\r\n          )}\r\n          <Stack spacing={0.3}>\r\n            <Typography variant=\"subtitle2\">{name}</Typography>\r\n          </Stack>\r\n        </Stack>\r\n        <Stack direction={\"row\"} spacing={2} alignItems={\"center\"}>\r\n          <Button\r\n            onClick={() => {\r\n              socket.emit(\"friend_request\", { to: _id, from: user_id }, () => {\r\n                alert(\"request sent\");\r\n              });\r\n            }}\r\n          >\r\n            Send Request\r\n          </Button>\r\n        </Stack>\r\n      </Stack>\r\n    </StyledChatBox>\r\n  );\r\n};\r\n\r\nconst FriendRequestElement = ({\r\n  img,\r\n  firstName,\r\n  lastName,\r\n  incoming,\r\n  missed,\r\n  online,\r\n  id,\r\n}) => {\r\n  const theme = useTheme();\r\n\r\n  const name = `${firstName} ${lastName}`;\r\n\r\n  return (\r\n    <StyledChatBox\r\n      sx={{\r\n        width: \"100%\",\r\n\r\n        borderRadius: 1,\r\n\r\n        backgroundColor: theme.palette.background.paper,\r\n      }}\r\n      p={2}\r\n    >\r\n      <Stack\r\n        direction=\"row\"\r\n        alignItems={\"center\"}\r\n        justifyContent=\"space-between\"\r\n      >\r\n        <Stack direction=\"row\" alignItems={\"center\"} spacing={2}>\r\n          {\" \"}\r\n          {online ? (\r\n            <StyledBadge\r\n              overlap=\"circular\"\r\n              anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\r\n              variant=\"dot\"\r\n            >\r\n              <Avatar alt={name} src={img} />\r\n            </StyledBadge>\r\n          ) : (\r\n            <Avatar alt={name} src={img} />\r\n          )}\r\n          <Stack spacing={0.3}>\r\n            <Typography variant=\"subtitle2\">{name}</Typography>\r\n          </Stack>\r\n        </Stack>\r\n        <Stack direction={\"row\"} spacing={2} alignItems={\"center\"}>\r\n          <Button\r\n            onClick={() => {\r\n              //  emit \"accept_request\" event\r\n              socket.emit(\"accept_request\", { request_id: id });\r\n            }}\r\n          >\r\n            Accept Request\r\n          </Button>\r\n        </Stack>\r\n      </Stack>\r\n    </StyledChatBox>\r\n  );\r\n};\r\n\r\n// FriendElement\r\n\r\nconst FriendElement = ({\r\n  img,\r\n  firstName,\r\n  lastName,\r\n  incoming,\r\n  missed,\r\n  online,\r\n  _id,\r\n}) => {\r\n  const theme = useTheme();\r\n\r\n  const name = `${firstName} ${lastName}`;\r\n\r\n  return (\r\n    <StyledChatBox\r\n      sx={{\r\n        width: \"100%\",\r\n\r\n        borderRadius: 1,\r\n\r\n        backgroundColor: theme.palette.background.paper,\r\n      }}\r\n      p={2}\r\n    >\r\n      <Stack\r\n        direction=\"row\"\r\n        alignItems={\"center\"}\r\n        justifyContent=\"space-between\"\r\n      >\r\n        <Stack direction=\"row\" alignItems={\"center\"} spacing={2}>\r\n          {\" \"}\r\n          {online ? (\r\n            <StyledBadge\r\n              overlap=\"circular\"\r\n              anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\r\n              variant=\"dot\"\r\n            >\r\n              <Avatar alt={name} src={img} />\r\n            </StyledBadge>\r\n          ) : (\r\n            <Avatar alt={name} src={img} />\r\n          )}\r\n          <Stack spacing={0.3}>\r\n            <Typography variant=\"subtitle2\">{name}</Typography>\r\n          </Stack>\r\n        </Stack>\r\n        <Stack direction={\"row\"} spacing={2} alignItems={\"center\"}>\r\n          <IconButton\r\n            onClick={() => {\r\n              // start a new conversation\r\n              socket.emit(\"start_conversation\", { to: _id, from: user_id });\r\n            }}\r\n          >\r\n            <Chat />\r\n          </IconButton>\r\n        </Stack>\r\n      </Stack>\r\n    </StyledChatBox>\r\n  );\r\n};\r\n\r\nexport { UserElement, FriendRequestElement, FriendElement };\r\n","import React, { useEffect } from \"react\";\r\nimport { Dialog, DialogContent, Slide, Stack, Tab, Tabs } from \"@mui/material\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  FetchFriendRequests,\r\n  FetchFriends,\r\n  FetchUsers,\r\n} from \"../../redux/slices/app\";\r\nimport { FriendElement, FriendRequestElement, UserElement } from \"../../components/UserElement\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst UsersList = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { users } = useSelector((state) => state.app);\r\n\r\n  useEffect(() => {\r\n    dispatch(FetchUsers());\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {users.map((el, idx) => {\r\n        return <UserElement key={idx} {...el} />;\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nconst FriendsList = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { friends } = useSelector((state) => state.app);\r\n\r\n  useEffect(() => {\r\n    dispatch(FetchFriends());\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {friends.map((el, idx) => {\r\n        return <FriendElement key={idx} {...el} />;\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nconst RequestsList = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { friendRequests } = useSelector((state) => state.app);\r\n\r\n  useEffect(() => {\r\n    dispatch(FetchFriendRequests());\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {friendRequests.map((el, idx) => {\r\n        return <FriendRequestElement key={idx} {...el.sender} id={el._id} />;\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nconst Friends = ({ open, handleClose }) => {\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      fullWidth\r\n      maxWidth=\"xs\"\r\n      open={open}\r\n      TransitionComponent={Transition}\r\n      keepMounted\r\n      onClose={handleClose}\r\n      aria-describedby=\"alert-dialog-slide-description\"\r\n      sx={{ p: 4 }}\r\n    >\r\n      {/* <DialogTitle>{\"Friends\"}</DialogTitle> */}\r\n      <Stack p={2} sx={{ width: \"100%\" }}>\r\n        <Tabs value={value} onChange={handleChange} centered>\r\n          <Tab label=\"Explore\" />\r\n          <Tab label=\"Friends\" />\r\n          <Tab label=\"Requests\" />\r\n        </Tabs>\r\n      </Stack>\r\n      <DialogContent>\r\n        <Stack sx={{ height: \"100%\" }}>\r\n          <Stack spacing={2.4}>\r\n            {(() => {\r\n              switch (value) {\r\n                case 0: // display all users in this list\r\n                  return <UsersList />;\r\n\r\n                case 1: // display friends in this list\r\n                  return <FriendsList />;\r\n\r\n                case 2: // display request in this list\r\n                  return <RequestsList />;\r\n\r\n                default:\r\n                  break;\r\n              }\r\n            })()}\r\n          </Stack>\r\n        </Stack>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default Friends;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Divider,\r\n  IconButton,\r\n  Stack,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport {\r\n  ArchiveBox,\r\n  CircleDashed,\r\n  MagnifyingGlass,\r\n  Users,\r\n} from \"phosphor-react\";\r\nimport { SimpleBarStyle } from \"../../components/Scrollbar\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport useResponsive from \"../../hooks/useResponsive\";\r\nimport BottomNav from \"../../layouts/dashboard/BottomNav\";\r\nimport { ChatList } from \"../../data\";\r\nimport ChatElement from \"../../components/ChatElement\";\r\nimport {\r\n  Search,\r\n  SearchIconWrapper,\r\n  StyledInputBase,\r\n} from \"../../components/Search\";\r\nimport Friends from \"../../sections/dashboard/Friends\";\r\nimport { socket } from \"../../socket\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { FetchDirectConversations } from \"../../redux/slices/conversation\";\r\n\r\nconst user_id = window.localStorage.getItem(\"user_id\");\r\n\r\nconst Chats = () => {\r\n  const theme = useTheme();\r\n  const isDesktop = useResponsive(\"up\", \"md\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const {conversations} = useSelector((state) => state.conversation.direct_chat);\r\n\r\n  useEffect(() => {\r\n    socket.emit(\"get_direct_conversations\", { user_id }, (data) => {\r\n      console.log(data); // this data is the list of conversations\r\n      // dispatch action\r\n\r\n      dispatch(FetchDirectConversations({ conversations: data }));\r\n    });\r\n  }, []);\r\n\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n\r\n  const handleCloseDialog = () => {\r\n    setOpenDialog(false);\r\n  };\r\n  const handleOpenDialog = () => {\r\n    setOpenDialog(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        sx={{\r\n          position: \"relative\",\r\n          height: \"100%\",\r\n          width: isDesktop ? 320 : \"100vw\",\r\n          backgroundColor:\r\n            theme.palette.mode === \"light\"\r\n              ? \"#F8FAFF\"\r\n              : theme.palette.background,\r\n\r\n          boxShadow: \"0px 0px 2px rgba(0, 0, 0, 0.25)\",\r\n        }}\r\n      >\r\n        {!isDesktop && (\r\n          // Bottom Nav\r\n          <BottomNav />\r\n        )}\r\n\r\n        <Stack p={3} spacing={2} sx={{ maxHeight: \"100vh\" }}>\r\n          <Stack\r\n            alignItems={\"center\"}\r\n            justifyContent=\"space-between\"\r\n            direction=\"row\"\r\n          >\r\n            <Typography variant=\"h5\">Chats</Typography>\r\n\r\n            <Stack direction={\"row\"} alignItems=\"center\" spacing={1}>\r\n              <IconButton\r\n                onClick={() => {\r\n                  handleOpenDialog();\r\n                }}\r\n                sx={{ width: \"max-content\" }}\r\n              >\r\n                <Users />\r\n              </IconButton>\r\n              <IconButton sx={{ width: \"max-content\" }}>\r\n                <CircleDashed />\r\n              </IconButton>\r\n            </Stack>\r\n          </Stack>\r\n          <Stack sx={{ width: \"100%\" }}>\r\n            <Search>\r\n              <SearchIconWrapper>\r\n                <MagnifyingGlass color=\"#709CE6\" />\r\n              </SearchIconWrapper>\r\n              <StyledInputBase\r\n                placeholder=\"Search…\"\r\n                inputProps={{ \"aria-label\": \"search\" }}\r\n              />\r\n            </Search>\r\n          </Stack>\r\n          <Stack spacing={1}>\r\n            <Stack direction={\"row\"} spacing={1.5} alignItems=\"center\">\r\n              <ArchiveBox size={24} />\r\n              <Button variant=\"text\">Archive</Button>\r\n            </Stack>\r\n            <Divider />\r\n          </Stack>\r\n          <Stack sx={{ flexGrow: 1, overflow: \"scroll\", height: \"100%\" }}>\r\n            <SimpleBarStyle timeout={500} clickOnTrack={false}>\r\n              <Stack spacing={2.4}>\r\n                {/* <Typography variant=\"subtitle2\" sx={{ color: \"#676667\" }}>\r\n                  Pinned\r\n                </Typography> */}\r\n                {/* Chat List */}\r\n                {/* {ChatList.filter((el) => el.pinned).map((el, idx) => {\r\n                  return <ChatElement {...el} />;\r\n                })} */}\r\n                <Typography variant=\"subtitle2\" sx={{ color: \"#676667\" }}>\r\n                  All Chats\r\n                </Typography>\r\n                {/* Chat List */}\r\n                {conversations.filter((el) => !el.pinned).map((el, idx) => {\r\n                  return <ChatElement {...el} />;\r\n                })}\r\n              </Stack>\r\n            </SimpleBarStyle>\r\n          </Stack>\r\n        </Stack>\r\n      </Box>\r\n      {openDialog && (\r\n        <Friends open={openDialog} handleClose={handleCloseDialog} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Chats;\r\n"],"names":["StyledChatBox","styled","Box","theme","cursor","StyledBadge","Badge","backgroundColor","color","boxShadow","palette","background","paper","position","top","left","width","height","borderRadius","animation","border","content","transform","opacity","img","name","msg","time","unread","online","id","dispatch","useDispatch","room_id","useSelector","state","app","selectedChatId","toString","isSelected","useTheme","onClick","SelectConversation","sx","mode","alpha","primary","main","p","direction","alignItems","justifyContent","spacing","overlap","anchorOrigin","vertical","horizontal","variant","alt","src","string","n","length","slice","fontWeight","className","badgeContent","marginRight","marginLeft","padding","pointerEvents","display","InputBase","paddingLeft","selectedTab","setSelectedTab","React","zIndex","bottom","Stack","Nav_Buttons","el","index","IconButton","icon","text","ProfileMenu","user_id","window","localStorage","getItem","UserElement","firstName","lastName","_id","Avatar","Typography","Button","socket","to","from","alert","FriendRequestElement","incoming","missed","request_id","FriendElement","Transition","props","ref","Slide","UsersList","users","useEffect","FetchUsers","map","idx","FriendsList","friends","FetchFriends","RequestsList","friendRequests","FetchFriendRequests","sender","open","handleClose","value","setValue","Dialog","fullWidth","maxWidth","TransitionComponent","keepMounted","onClose","Tabs","onChange","event","newValue","centered","Tab","label","DialogContent","isDesktop","useResponsive","conversations","conversation","direct_chat","data","console","log","FetchDirectConversations","openDialog","setOpenDialog","useState","maxHeight","Search","placeholder","inputProps","size","Divider","flexGrow","overflow","timeout","clickOnTrack","filter","pinned","ChatElement"],"sourceRoot":""}
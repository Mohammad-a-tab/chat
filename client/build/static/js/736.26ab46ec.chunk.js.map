{"version":3,"file":"static/js/736.26ab46ec.chunk.js","mappings":"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","sources":["sections/dashboard/Settings/ThemeDialog.js","sections/dashboard/Settings/ShortcutDialog.js","pages/dashboard/Settings/index.js"],"sourcesContent":["import React from \"react\";\r\nimport {\r\n  Dialog,\r\n  Slide,\r\n  Button,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Radio,\r\n  RadioGroup,\r\n  FormControl,\r\n  FormControlLabel,\r\n} from \"@mui/material\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst ThemeDialog = ({ open, handleClose }) => {\r\n  return (\r\n    <>\r\n      <Dialog\r\n        fullWidth\r\n        open={open}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        onClose={handleClose}\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle sx={{ mb: 2 }}>{\"Choose Theme\"}</DialogTitle>\r\n        <DialogContent>\r\n          <FormControl>\r\n            <RadioGroup\r\n              aria-labelledby=\"demo-radio-buttons-group-label\"\r\n              defaultValue=\"light\"\r\n              name=\"radio-buttons-group\"\r\n            >\r\n              <FormControlLabel\r\n                value=\"light\"\r\n                control={<Radio />}\r\n                label=\"Light\"\r\n              />\r\n              <FormControlLabel value=\"dark\" control={<Radio />} label=\"Dark\" />\r\n              <FormControlLabel\r\n                value=\"system\"\r\n                control={<Radio />}\r\n                label=\"System Default\"\r\n              />\r\n            </RadioGroup>\r\n          </FormControl>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose}>Cancel</Button>\r\n          <Button variant=\"contained\" onClick={handleClose}>\r\n            Apply\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ThemeDialog;\r\n","import React from \"react\";\r\nimport {\r\n  Dialog,\r\n  Slide,\r\n  Button,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Stack,\r\n  Typography,\r\n  Grid,\r\n} from \"@mui/material\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst list = [\r\n  {\r\n    key: 0,\r\n    title: \"Mark as unread\",\r\n    combination: [\"Cmd\", \"Shift\", \"U\"],\r\n  },\r\n  {\r\n    key: 1,\r\n    title: \"Mute\",\r\n    combination: [\"Cmd\", \"Shift\", \"M\"],\r\n  },\r\n  {\r\n    key: 2,\r\n    title: \"Archive Chat\",\r\n    combination: [\"Cmd\", \"Shift\", \"E\"],\r\n  },\r\n  {\r\n    key: 3,\r\n    title: \"Delete Chat\",\r\n    combination: [\"Cmd\", \"Shift\", \"D\"],\r\n  },\r\n  {\r\n    key: 4,\r\n    title: \"Pin Chat\",\r\n    combination: [\"Cmd\", \"Shift\", \"P\"],\r\n  },\r\n  {\r\n    key: 5,\r\n    title: \"Search\",\r\n    combination: [\"Cmd\", \"F\"],\r\n  },\r\n  {\r\n    key: 6,\r\n    title: \"Search Chat\",\r\n    combination: [\"Cmd\", \"Shift\", \"F\"],\r\n  },\r\n  {\r\n    key: 7,\r\n    title: \"Next Chat\",\r\n    combination: [\"Cmd\", \"N\"],\r\n  },\r\n  {\r\n    key: 8,\r\n    title: \"Next Step\",\r\n    combination: [\"Ctrl\", \"Tab\"],\r\n  },\r\n  {\r\n    key: 9,\r\n    title: \"Previous Step\",\r\n    combination: [\"Ctrl\", \"Shift\", \"Tab\"],\r\n  },\r\n  {\r\n    key: 10,\r\n    title: \"New Group\",\r\n    combination: [\"Cmd\", \"Shift\", \"N\"],\r\n  },\r\n  {\r\n    key: 11,\r\n    title: \"Profile & About\",\r\n    combination: [\"Cmd\", \"P\"],\r\n  },\r\n  {\r\n    key: 12,\r\n    title: \"Increase speed of voice message\",\r\n    combination: [\"Shift\", \".\"],\r\n  },\r\n  {\r\n    key: 13,\r\n    title: \"Decrease speed of voice message\",\r\n    combination: [\"Shift\", \",\"],\r\n  },\r\n  {\r\n    key: 14,\r\n    title: \"Settings\",\r\n    combination: [\"Shift\", \"S\"],\r\n  },\r\n  {\r\n    key: 15,\r\n    title: \"Emoji Panel\",\r\n    combination: [\"Cmd\", \"E\"],\r\n  },\r\n  {\r\n    key: 16,\r\n    title: \"Sticker Panel\",\r\n    combination: [\"Cmd\", \"S\"],\r\n  },\r\n];\r\n\r\nconst ShortcutDialog = ({ open, handleClose }) => {\r\n  return (\r\n    <>\r\n      <Dialog\r\n        fullWidth\r\n        maxWidth=\"md\"\r\n        open={open}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        onClose={handleClose}\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n        sx={{ p: 4 }}\r\n      >\r\n        <DialogTitle>{\"Keyboard Shortcuts\"}</DialogTitle>\r\n        <DialogContent sx={{ mt: 4 }}>\r\n          {/*  */}\r\n          <Grid container spacing={3}>\r\n            {list.map(({ key, title, combination }) => {\r\n              return (\r\n                <Grid item xs={6}>\r\n                  <Stack\r\n                    sx={{ width: \"100%\" }}\r\n                    justifyContent=\"space-between\"\r\n                    key={key}\r\n                    spacing={3}\r\n                    direction={\"row\"}\r\n                    alignItems=\"center\"\r\n                  >\r\n                    <Typography variant=\"caption\" sx={{ fontSize: 14 }}>\r\n                      {title}\r\n                    </Typography>\r\n                    <Stack spacing={2} direction=\"row\">\r\n                      {combination.map((el) => {\r\n                        return (\r\n                          <Button\r\n                            sx={{ color: \"#212121\" }}\r\n                            disabled\r\n                            variant=\"contained\"\r\n                          >\r\n                            {el}\r\n                          </Button>\r\n                        );\r\n                      })}\r\n                    </Stack>\r\n                  </Stack>\r\n                </Grid>\r\n              );\r\n            })}\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button variant={\"contained\"} onClick={handleClose}>\r\n            Ok\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ShortcutDialog;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Divider,\r\n  IconButton,\r\n  Stack,\r\n  Typography,\r\n} from \"@mui/material\";\r\n\r\nimport {\r\n  CaretLeft,\r\n  Bell,\r\n  Lock,\r\n  Key,\r\n  PencilCircle,\r\n  Image,\r\n  Note,\r\n  Keyboard,\r\n  Info,\r\n} from \"phosphor-react\";\r\n\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport { faker } from \"@faker-js/faker\";\r\nimport ThemeDialog from \"../../../sections/dashboard/Settings/ThemeDialog\";\r\nimport ShortcutDialog from \"../../../sections/dashboard/Settings/ShortcutDialog\";\r\n\r\nconst Settings = () => {\r\n  const theme = useTheme();\r\n\r\n  const [openTheme, setOpenTheme] = useState(false);\r\n\r\n  const handleOpenTheme = () => {\r\n    setOpenTheme(true);\r\n  };\r\n\r\n  const handleCloseTheme = () => {\r\n    setOpenTheme(false);\r\n  };\r\n  const [openShortcuts, setOpenShortcuts] = useState(false);\r\n\r\n  const handleOpenShortcuts = () => {\r\n    setOpenShortcuts(true);\r\n  };\r\n\r\n  const handleCloseShortcuts = () => {\r\n    setOpenShortcuts(false);\r\n  };\r\n\r\n  const list = [\r\n    {\r\n      key: 0,\r\n      icon: <Bell size={20} />,\r\n      title: \"Notifications\",\r\n      onclick: () => {},\r\n    },\r\n    {\r\n      key: 1,\r\n      icon: <Lock size={20} />,\r\n      title: \"Privacy\",\r\n      onclick: () => {},\r\n    },\r\n    {\r\n      key: 2,\r\n      icon: <Key size={20} />,\r\n      title: \"Security\",\r\n      onclick: () => {},\r\n    },\r\n    {\r\n      key: 3,\r\n      icon: <PencilCircle size={20} />,\r\n      title: \"Theme\",\r\n      onclick: handleOpenTheme,\r\n    },\r\n    {\r\n      key: 4,\r\n      icon: <Image size={20} />,\r\n      title: \"Chat Wallpaper\",\r\n      onclick: () => {},\r\n    },\r\n    {\r\n      key: 5,\r\n      icon: <Note size={20} />,\r\n      title: \"Request Account Info\",\r\n      onclick: () => {},\r\n    },\r\n    {\r\n      key: 6,\r\n      icon: <Keyboard size={20} />,\r\n      title: \"Keyboard Shortcuts\",\r\n      onclick: handleOpenShortcuts,\r\n    },\r\n    {\r\n      key: 7,\r\n      icon: <Info size={20} />,\r\n      title: \"Help\",\r\n      onclick: () => {},\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <Stack direction=\"row\" sx={{ width: \"100%\" }}>\r\n        {/* LeftPane */}\r\n        <Box\r\n          sx={{\r\n            overflowY: \"scroll\",\r\n     \r\n            height: \"100vh\",\r\n            width: 320,\r\n            backgroundColor:\r\n              theme.palette.mode === \"light\"\r\n                ? \"#F8FAFF\"\r\n                : theme.palette.background,\r\n\r\n            boxShadow: \"0px 0px 2px rgba(0, 0, 0, 0.25)\",\r\n          }}\r\n        >\r\n          \r\n          <Stack p={4} spacing={5}>\r\n            {/* Header */}\r\n            <Stack direction=\"row\" alignItems={\"center\"} spacing={3}>\r\n              <IconButton>\r\n                <CaretLeft size={24} color={\"#4B4B4B\"} />\r\n              </IconButton>\r\n\r\n              <Typography variant=\"h5\">Settings</Typography>\r\n            </Stack>\r\n\r\n            {/* Profile */}\r\n            <Stack direction=\"row\" spacing={3}>\r\n              <Avatar\r\n                src={faker.image.avatar()}\r\n                sx={{ height: 56, width: 56 }}\r\n              />\r\n              <Stack spacing={0.5}>\r\n                <Typography variant=\"article\">{`${faker.name.firstName()} ${faker.name.lastName()}`}</Typography>\r\n                <Typography variant=\"body2\">{faker.random.words()}</Typography>\r\n              </Stack>\r\n            </Stack>\r\n            {/* List */}\r\n            <Stack spacing={4}>\r\n              {list.map(({ key, icon, title, onclick }) => {\r\n                return (\r\n                  <>\r\n                    <Stack\r\n                      onClick={onclick}\r\n                      sx={{ cursor: \"pointer\" }}\r\n                      spacing={2}\r\n                    >\r\n                      <Stack alignItems={\"center\"} direction=\"row\" spacing={2}>\r\n                        {icon}\r\n                        <Typography variant=\"body2\">{title}</Typography>\r\n                      </Stack>\r\n                      {key !== 7 && <Divider />}\r\n                    </Stack>\r\n                  </>\r\n                );\r\n              })}\r\n            </Stack>\r\n          </Stack>\r\n        </Box>\r\n        {/* Right Pane */}\r\n        <Box\r\n          sx={{\r\n            height: \"100%\",\r\n            width: \"calc(100vw - 420px )\",\r\n            backgroundColor:\r\n              theme.palette.mode === \"light\"\r\n                ? \"#FFF\"\r\n                : theme.palette.background.paper,\r\n            borderBottom: \"6px solid #0162C4\",\r\n          }}\r\n        ></Box>\r\n      </Stack>\r\n      {openTheme && (\r\n        <ThemeDialog open={openTheme} handleClose={handleCloseTheme} />\r\n      )}\r\n      {openShortcuts && <ShortcutDialog open={openShortcuts} handleClose={handleCloseShortcuts} /> }\r\n      \r\n    </>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n"],"names":["Transition","React","props","ref","Slide","direction","open","handleClose","Dialog","fullWidth","TransitionComponent","keepMounted","onClose","DialogTitle","sx","mb","DialogContent","FormControl","RadioGroup","defaultValue","name","FormControlLabel","value","control","Radio","label","DialogActions","Button","onClick","variant","list","key","title","combination","maxWidth","p","mt","Grid","container","spacing","map","item","xs","Stack","width","justifyContent","alignItems","Typography","fontSize","el","color","disabled","theme","useTheme","openTheme","setOpenTheme","useState","openShortcuts","setOpenShortcuts","icon","size","onclick","Box","overflowY","height","backgroundColor","palette","mode","background","boxShadow","IconButton","Avatar","src","faker","cursor","Divider","paper","borderBottom"],"sourceRoot":""}
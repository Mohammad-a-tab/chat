{"version":3,"file":"static/js/977.5bca95a2.chunk.js","mappings":"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","sources":["components/Chat/Header.js","components/Chat/Footer.js","pages/dashboard/Conversation.js","sections/dashboard/Conversation.js"],"sourcesContent":["import React from \"react\";\r\nimport {\r\n  Avatar,\r\n  Badge,\r\n  Box,\r\n  Divider,\r\n  Fade,\r\n  IconButton,\r\n  Menu,\r\n  MenuItem,\r\n  Stack,\r\n  styled,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport { CaretDown, MagnifyingGlass, Phone, VideoCamera } from \"phosphor-react\";\r\nimport { faker } from \"@faker-js/faker\";\r\nimport useResponsive from \"../../hooks/useResponsive\";\r\nimport { ToggleSidebar } from \"../../redux/slices/app\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { StartAudioCall } from \"../../redux/slices/audioCall\";\r\nimport { StartVideoCall } from \"../../redux/slices/videoCall\";\r\n\r\nconst StyledBadge = styled(Badge)(({ theme }) => ({\r\n  \"& .MuiBadge-badge\": {\r\n    backgroundColor: \"#44b700\",\r\n    color: \"#44b700\",\r\n    boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\r\n    \"&::after\": {\r\n      position: \"absolute\",\r\n      top: 0,\r\n      left: 0,\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      borderRadius: \"50%\",\r\n      animation: \"ripple 1.2s infinite ease-in-out\",\r\n      border: \"1px solid currentColor\",\r\n      content: '\"\"',\r\n    },\r\n  },\r\n  \"@keyframes ripple\": {\r\n    \"0%\": {\r\n      transform: \"scale(.8)\",\r\n      opacity: 1,\r\n    },\r\n    \"100%\": {\r\n      transform: \"scale(2.4)\",\r\n      opacity: 0,\r\n    },\r\n  },\r\n}));\r\n\r\nconst Conversation_Menu = [\r\n  {\r\n    title: \"Contact info\",\r\n  },\r\n  {\r\n    title: \"Mute notifications\",\r\n  },\r\n  {\r\n    title: \"Clear messages\",\r\n  },\r\n  {\r\n    title: \"Delete chat\",\r\n  },\r\n];\r\n\r\nconst ChatHeader = () => {\r\n  const dispatch = useDispatch();\r\n  const isMobile = useResponsive(\"between\", \"md\", \"xs\", \"sm\");\r\n  const theme = useTheme();\r\n\r\n  const {current_conversation} = useSelector((state) => state.conversation.direct_chat);\r\n\r\n  const [conversationMenuAnchorEl, setConversationMenuAnchorEl] =\r\n    React.useState(null);\r\n  const openConversationMenu = Boolean(conversationMenuAnchorEl);\r\n  const handleClickConversationMenu = (event) => {\r\n    setConversationMenuAnchorEl(event.currentTarget);\r\n  };\r\n  const handleCloseConversationMenu = () => {\r\n    setConversationMenuAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        p={2}\r\n        width={\"100%\"}\r\n        sx={{\r\n          backgroundColor:\r\n            theme.palette.mode === \"light\"\r\n              ? \"#F8FAFF\"\r\n              : theme.palette.background,\r\n          boxShadow: \"0px 0px 2px rgba(0, 0, 0, 0.25)\",\r\n        }}\r\n      >\r\n        <Stack\r\n          alignItems={\"center\"}\r\n          direction={\"row\"}\r\n          sx={{ width: \"100%\", height: \"100%\" }}\r\n          justifyContent=\"space-between\"\r\n        >\r\n          <Stack\r\n            onClick={() => {\r\n              dispatch(ToggleSidebar());\r\n            }}\r\n            spacing={2}\r\n            direction=\"row\"\r\n          >\r\n            <Box>\r\n              <StyledBadge\r\n                overlap=\"circular\"\r\n                anchorOrigin={{\r\n                  vertical: \"bottom\",\r\n                  horizontal: \"right\",\r\n                }}\r\n                variant=\"dot\"\r\n              >\r\n                <Avatar\r\n                  alt={current_conversation?.name}\r\n                  src={current_conversation?.img}\r\n                />\r\n              </StyledBadge>\r\n            </Box>\r\n            <Stack spacing={0.2}>\r\n              <Typography variant=\"subtitle2\">\r\n                {current_conversation?.name}\r\n              </Typography>\r\n              <Typography variant=\"caption\">Online</Typography>\r\n            </Stack>\r\n          </Stack>\r\n          <Stack\r\n            direction={\"row\"}\r\n            alignItems=\"center\"\r\n            spacing={isMobile ? 1 : 3}\r\n          >\r\n            <IconButton onClick={() => {\r\n              dispatch(StartVideoCall(current_conversation.user_id));\r\n            }}>\r\n              <VideoCamera />\r\n            </IconButton>\r\n            <IconButton\r\n              onClick={() => {\r\n                \r\n                dispatch(StartAudioCall(current_conversation.user_id));\r\n              }}\r\n            >\r\n              <Phone />\r\n            </IconButton>\r\n            {!isMobile && (\r\n              <IconButton>\r\n                <MagnifyingGlass />\r\n              </IconButton>\r\n            )}\r\n            <Divider orientation=\"vertical\" flexItem />\r\n            <IconButton\r\n              id=\"conversation-positioned-button\"\r\n              aria-controls={\r\n                openConversationMenu\r\n                  ? \"conversation-positioned-menu\"\r\n                  : undefined\r\n              }\r\n              aria-haspopup=\"true\"\r\n              aria-expanded={openConversationMenu ? \"true\" : undefined}\r\n              onClick={handleClickConversationMenu}\r\n            >\r\n              <CaretDown />\r\n            </IconButton>\r\n            <Menu\r\n              MenuListProps={{\r\n                \"aria-labelledby\": \"fade-button\",\r\n              }}\r\n              TransitionComponent={Fade}\r\n              id=\"conversation-positioned-menu\"\r\n              aria-labelledby=\"conversation-positioned-button\"\r\n              anchorEl={conversationMenuAnchorEl}\r\n              open={openConversationMenu}\r\n              onClose={handleCloseConversationMenu}\r\n              anchorOrigin={{\r\n                vertical: \"bottom\",\r\n                horizontal: \"right\",\r\n              }}\r\n              transformOrigin={{\r\n                vertical: \"top\",\r\n                horizontal: \"right\",\r\n              }}\r\n            >\r\n              <Box p={1}>\r\n                <Stack spacing={1}>\r\n                  {Conversation_Menu.map((el) => (\r\n                    <MenuItem onClick={handleCloseConversationMenu}>\r\n                      <Stack\r\n                        sx={{ minWidth: 100 }}\r\n                        direction=\"row\"\r\n                        alignItems={\"center\"}\r\n                        justifyContent=\"space-between\"\r\n                      >\r\n                        <span>{el.title}</span>\r\n                      </Stack>{\" \"}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Stack>\r\n              </Box>\r\n            </Menu>\r\n          </Stack>\r\n        </Stack>\r\n      </Box>\r\n\r\n      \r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChatHeader;\r\n","import {\r\n  Box,\r\n  Fab,\r\n  IconButton,\r\n  InputAdornment,\r\n  Stack,\r\n  TextField,\r\n  Tooltip,\r\n} from \"@mui/material\";\r\nimport {\r\n  Camera,\r\n  File,\r\n  Image,\r\n  LinkSimple,\r\n  PaperPlaneTilt,\r\n  Smiley,\r\n  Sticker,\r\n  User,\r\n} from \"phosphor-react\";\r\nimport { useTheme, styled } from \"@mui/material/styles\";\r\nimport React, { useRef, useState } from \"react\";\r\nimport useResponsive from \"../../hooks/useResponsive\";\r\n\r\nimport data from \"@emoji-mart/data\";\r\nimport Picker from \"@emoji-mart/react\";\r\nimport { socket } from \"../../socket\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst StyledInput = styled(TextField)(({ theme }) => ({\r\n  \"& .MuiInputBase-input\": {\r\n    paddingTop: \"12px !important\",\r\n    paddingBottom: \"12px !important\",\r\n  },\r\n}));\r\n\r\nconst Actions = [\r\n  {\r\n    color: \"#4da5fe\",\r\n    icon: <Image size={24} />,\r\n    y: 102,\r\n    title: \"Photo/Video\",\r\n  },\r\n  {\r\n    color: \"#1b8cfe\",\r\n    icon: <Sticker size={24} />,\r\n    y: 172,\r\n    title: \"Stickers\",\r\n  },\r\n  {\r\n    color: \"#0172e4\",\r\n    icon: <Camera size={24} />,\r\n    y: 242,\r\n    title: \"Image\",\r\n  },\r\n  {\r\n    color: \"#0159b2\",\r\n    icon: <File size={24} />,\r\n    y: 312,\r\n    title: \"Document\",\r\n  },\r\n  {\r\n    color: \"#013f7f\",\r\n    icon: <User size={24} />,\r\n    y: 382,\r\n    title: \"Contact\",\r\n  },\r\n];\r\n\r\nconst ChatInput = ({\r\n  openPicker,\r\n  setOpenPicker,\r\n  setValue,\r\n  value,\r\n  inputRef,\r\n}) => {\r\n  const [openActions, setOpenActions] = React.useState(false);\r\n\r\n  return (\r\n    <StyledInput\r\n      inputRef={inputRef}\r\n      value={value}\r\n      onChange={(event) => {\r\n        setValue(event.target.value);\r\n      }}\r\n      fullWidth\r\n      placeholder=\"Write a message...\"\r\n      variant=\"filled\"\r\n      InputProps={{\r\n        disableUnderline: true,\r\n        startAdornment: (\r\n          <Stack sx={{ width: \"max-content\" }}>\r\n            <Stack\r\n              sx={{\r\n                position: \"relative\",\r\n                display: openActions ? \"inline-block\" : \"none\",\r\n              }}\r\n            >\r\n              {Actions.map((el) => (\r\n                <Tooltip placement=\"right\" title={el.title}>\r\n                  <Fab\r\n                    onClick={() => {\r\n                      setOpenActions(!openActions);\r\n                    }}\r\n                    sx={{\r\n                      position: \"absolute\",\r\n                      top: -el.y,\r\n                      backgroundColor: el.color,\r\n                    }}\r\n                    aria-label=\"add\"\r\n                  >\r\n                    {el.icon}\r\n                  </Fab>\r\n                </Tooltip>\r\n              ))}\r\n            </Stack>\r\n\r\n            <InputAdornment>\r\n              <IconButton\r\n                onClick={() => {\r\n                  setOpenActions(!openActions);\r\n                }}\r\n              >\r\n                <LinkSimple />\r\n              </IconButton>\r\n            </InputAdornment>\r\n          </Stack>\r\n        ),\r\n        endAdornment: (\r\n          <Stack sx={{ position: \"relative\" }}>\r\n            <InputAdornment>\r\n              <IconButton\r\n                onClick={() => {\r\n                  setOpenPicker(!openPicker);\r\n                }}\r\n              >\r\n                <Smiley />\r\n              </IconButton>\r\n            </InputAdornment>\r\n          </Stack>\r\n        ),\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nfunction linkify(text) {\r\n  const urlRegex = /(https?:\\/\\/[^\\s]+)/g;\r\n  return text.replace(\r\n    urlRegex,\r\n    (url) => `<a href=\"${url}\" target=\"_blank\">${url}</a>`\r\n  );\r\n}\r\n\r\nfunction containsUrl(text) {\r\n  const urlRegex = /(https?:\\/\\/[^\\s]+)/g;\r\n  return urlRegex.test(text);\r\n}\r\n\r\nconst Footer = () => {\r\n  const theme = useTheme();\r\n\r\n  const { current_conversation } = useSelector(\r\n    (state) => state.conversation.direct_chat\r\n  );\r\n\r\n  const user_id = window.localStorage.getItem(\"user_id\");\r\n\r\n  const isMobile = useResponsive(\"between\", \"md\", \"xs\", \"sm\");\r\n\r\n  const { sideBar, room_id } = useSelector((state) => state.app);\r\n\r\n  const [openPicker, setOpenPicker] = React.useState(false);\r\n\r\n  const [value, setValue] = useState(\"\");\r\n  const inputRef = useRef(null);\r\n\r\n  function handleEmojiClick(emoji) {\r\n    const input = inputRef.current;\r\n\r\n    if (input) {\r\n      const selectionStart = input.selectionStart;\r\n      const selectionEnd = input.selectionEnd;\r\n\r\n      setValue(\r\n        value.substring(0, selectionStart) +\r\n          emoji +\r\n          value.substring(selectionEnd)\r\n      );\r\n\r\n      // Move the cursor to the end of the inserted emoji\r\n      input.selectionStart = input.selectionEnd = selectionStart + 1;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        position: \"relative\",\r\n        backgroundColor: \"transparent !important\",\r\n      }}\r\n    >\r\n      <Box\r\n        p={isMobile ? 1 : 2}\r\n        width={\"100%\"}\r\n        sx={{\r\n          backgroundColor:\r\n            theme.palette.mode === \"light\"\r\n              ? \"#F8FAFF\"\r\n              : theme.palette.background,\r\n          boxShadow: \"0px 0px 2px rgba(0, 0, 0, 0.25)\",\r\n        }}\r\n      >\r\n        <Stack direction=\"row\" alignItems={\"center\"} spacing={isMobile ? 1 : 3}>\r\n          <Stack sx={{ width: \"100%\" }}>\r\n            <Box\r\n              style={{\r\n                zIndex: 10,\r\n                position: \"fixed\",\r\n                display: openPicker ? \"inline\" : \"none\",\r\n                bottom: 81,\r\n                right: isMobile ? 20 : sideBar.open ? 420 : 100,\r\n              }}\r\n            >\r\n              <Picker\r\n                theme={theme.palette.mode}\r\n                data={data}\r\n                onEmojiSelect={(emoji) => {\r\n                  handleEmojiClick(emoji.native);\r\n                }}\r\n              />\r\n            </Box>\r\n            {/* Chat Input */}\r\n            <ChatInput\r\n              inputRef={inputRef}\r\n              value={value}\r\n              setValue={setValue}\r\n              openPicker={openPicker}\r\n              setOpenPicker={setOpenPicker}\r\n            />\r\n          </Stack>\r\n          <Box\r\n            sx={{\r\n              height: 48,\r\n              width: 48,\r\n              backgroundColor: theme.palette.primary.main,\r\n              borderRadius: 1.5,\r\n            }}\r\n          >\r\n            <Stack\r\n              sx={{ height: \"100%\" }}\r\n              alignItems={\"center\"}\r\n              justifyContent=\"center\"\r\n            >\r\n              <IconButton\r\n                onClick={() => {\r\n                  socket.emit(\"text_message\", {\r\n                    message: linkify(value),\r\n                    conversation_id: room_id,\r\n                    from: user_id,\r\n                    to: current_conversation.user_id,\r\n                    type: containsUrl(value) ? \"Link\" : \"Text\",\r\n                  });\r\n                }}\r\n              >\r\n                <PaperPlaneTilt color=\"#ffffff\" />\r\n              </IconButton>\r\n            </Stack>\r\n          </Box>\r\n        </Stack>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import { Stack, Box } from \"@mui/material\";\r\nimport React, { useEffect, useRef } from \"react\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport { SimpleBarStyle } from \"../../components/Scrollbar\";\r\n\r\nimport { ChatHeader, ChatFooter } from \"../../components/Chat\";\r\nimport useResponsive from \"../../hooks/useResponsive\";\r\nimport { Chat_History } from \"../../data\";\r\nimport {\r\n  DocMsg,\r\n  LinkMsg,\r\n  MediaMsg,\r\n  ReplyMsg,\r\n  TextMsg,\r\n  Timeline,\r\n} from \"../../sections/dashboard/Conversation\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  FetchCurrentMessages,\r\n  SetCurrentConversation,\r\n} from \"../../redux/slices/conversation\";\r\nimport { socket } from \"../../socket\";\r\n\r\nconst Conversation = ({ isMobile, menu }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { conversations, current_messages } = useSelector(\r\n    (state) => state.conversation.direct_chat\r\n  );\r\n  const { room_id } = useSelector((state) => state.app);\r\n\r\n  useEffect(() => {\r\n    const current = conversations.find((el) => el?.id === room_id);\r\n\r\n    socket.emit(\"get_messages\", { conversation_id: current?.id }, (data) => {\r\n      // data => list of messages\r\n      console.log(data, \"List of messages\");\r\n      dispatch(FetchCurrentMessages({ messages: data }));\r\n    });\r\n\r\n    dispatch(SetCurrentConversation(current));\r\n  }, []);\r\n  return (\r\n    <Box p={isMobile ? 1 : 3}>\r\n      <Stack spacing={3}>\r\n        {current_messages.map((el, idx) => {\r\n          switch (el.type) {\r\n            case \"divider\":\r\n              return (\r\n                // Timeline\r\n                <Timeline el={el} />\r\n              );\r\n\r\n            case \"msg\":\r\n              switch (el.subtype) {\r\n                case \"img\":\r\n                  return (\r\n                    // Media Message\r\n                    <MediaMsg el={el} menu={menu} />\r\n                  );\r\n\r\n                case \"doc\":\r\n                  return (\r\n                    // Doc Message\r\n                    <DocMsg el={el} menu={menu} />\r\n                  );\r\n                case \"Link\":\r\n                  return (\r\n                    //  Link Message\r\n                    <LinkMsg el={el} menu={menu} />\r\n                  );\r\n\r\n                case \"reply\":\r\n                  return (\r\n                    //  ReplyMessage\r\n                    <ReplyMsg el={el} menu={menu} />\r\n                  );\r\n\r\n                default:\r\n                  return (\r\n                    // Text Message\r\n                    <TextMsg el={el} menu={menu} />\r\n                  );\r\n              }\r\n\r\n            default:\r\n              return <></>;\r\n          }\r\n        })}\r\n      </Stack>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst ChatComponent = () => {\r\n  const isMobile = useResponsive(\"between\", \"md\", \"xs\", \"sm\");\r\n  const theme = useTheme();\r\n\r\n  const messageListRef = useRef(null);\r\n\r\n  const { current_messages } = useSelector(\r\n    (state) => state.conversation.direct_chat\r\n  );\r\n\r\n  useEffect(() => {\r\n    // Scroll to the bottom of the message list when new messages are added\r\n    messageListRef.current.scrollTop = messageListRef.current.scrollHeight;\r\n  }, [current_messages]);\r\n\r\n  return (\r\n    <Stack\r\n      height={\"100%\"}\r\n      maxHeight={\"100vh\"}\r\n      width={isMobile ? \"100vw\" : \"auto\"}\r\n    >\r\n      {/*  */}\r\n      <ChatHeader />\r\n      <Box\r\n        ref={messageListRef}\r\n        width={\"100%\"}\r\n        sx={{\r\n          position: \"relative\",\r\n          flexGrow: 1,\r\n          overflow: \"scroll\",\r\n\r\n          backgroundColor:\r\n            theme.palette.mode === \"light\"\r\n              ? \"#F0F4FA\"\r\n              : theme.palette.background,\r\n\r\n          boxShadow: \"0px 0px 2px rgba(0, 0, 0, 0.25)\",\r\n        }}\r\n      >\r\n        <SimpleBarStyle timeout={500} clickOnTrack={false}>\r\n          <Conversation menu={true} isMobile={isMobile} />\r\n        </SimpleBarStyle>\r\n      </Box>\r\n\r\n      {/*  */}\r\n      <ChatFooter />\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default ChatComponent;\r\n\r\nexport { Conversation };\r\n","import React from \"react\";\r\nimport {\r\n  Stack,\r\n  Box,\r\n  Typography,\r\n  Menu,\r\n  MenuItem,\r\n  IconButton,\r\n  Divider,\r\n} from \"@mui/material\";\r\nimport { useTheme, alpha } from \"@mui/material/styles\";\r\nimport { DotsThreeVertical, DownloadSimple, Image } from \"phosphor-react\";\r\nimport { Message_options } from \"../../data\";\r\nimport { Link } from \"react-router-dom\";\r\nimport truncateString from \"../../utils/truncate\";\r\nimport { LinkPreview } from \"@dhaiwat10/react-link-preview\";\r\nimport Embed from \"react-embed\";\r\n\r\nconst MessageOption = () => {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  return (\r\n    <>\r\n      <DotsThreeVertical\r\n        size={20}\r\n        id=\"basic-button\"\r\n        aria-controls={open ? \"basic-menu\" : undefined}\r\n        aria-haspopup=\"true\"\r\n        aria-expanded={open ? \"true\" : undefined}\r\n        onClick={handleClick}\r\n      />\r\n      <Menu\r\n        id=\"basic-menu\"\r\n        anchorEl={anchorEl}\r\n        open={open}\r\n        onClose={handleClose}\r\n        MenuListProps={{\r\n          \"aria-labelledby\": \"basic-button\",\r\n        }}\r\n      >\r\n        <Stack spacing={1} px={1}>\r\n          {Message_options.map((el) => (\r\n            <MenuItem onClick={handleClose}>{el.title}</MenuItem>\r\n          ))}\r\n        </Stack>\r\n      </Menu>\r\n    </>\r\n  );\r\n};\r\n\r\nconst TextMsg = ({ el, menu }) => {\r\n  const theme = useTheme();\r\n  return (\r\n    <Stack direction=\"row\" justifyContent={el.incoming ? \"start\" : \"end\"}>\r\n      <Box\r\n        px={1.5}\r\n        py={1.5}\r\n        sx={{\r\n          backgroundColor: el.incoming\r\n            ? alpha(theme.palette.background.default, 1)\r\n            : theme.palette.primary.main,\r\n          borderRadius: 1.5,\r\n          width: \"max-content\",\r\n        }}\r\n      >\r\n        <Typography\r\n          variant=\"body2\"\r\n          color={el.incoming ? theme.palette.text : \"#fff\"}\r\n        >\r\n          {el.message}\r\n        </Typography>\r\n      </Box>\r\n      {menu && <MessageOption />}\r\n    </Stack>\r\n  );\r\n};\r\nconst MediaMsg = ({ el, menu }) => {\r\n  const theme = useTheme();\r\n  return (\r\n    <Stack direction=\"row\" justifyContent={el.incoming ? \"start\" : \"end\"}>\r\n      <Box\r\n        px={1.5}\r\n        py={1.5}\r\n        sx={{\r\n          backgroundColor: el.incoming\r\n            ? alpha(theme.palette.background.default, 1)\r\n            : theme.palette.primary.main,\r\n          borderRadius: 1.5,\r\n          width: \"max-content\",\r\n        }}\r\n      >\r\n        <Stack spacing={1}>\r\n          <img\r\n            src={el.img}\r\n            alt={el.message}\r\n            style={{ maxHeight: 210, borderRadius: \"10px\" }}\r\n          />\r\n          <Typography\r\n            variant=\"body2\"\r\n            color={el.incoming ? theme.palette.text : \"#fff\"}\r\n          >\r\n            {el.message}\r\n          </Typography>\r\n        </Stack>\r\n      </Box>\r\n      {menu && <MessageOption />}\r\n    </Stack>\r\n  );\r\n};\r\nconst DocMsg = ({ el, menu }) => {\r\n  const theme = useTheme();\r\n  return (\r\n    <Stack direction=\"row\" justifyContent={el.incoming ? \"start\" : \"end\"}>\r\n      <Box\r\n        px={1.5}\r\n        py={1.5}\r\n        sx={{\r\n          backgroundColor: el.incoming\r\n            ? alpha(theme.palette.background.default, 1)\r\n            : theme.palette.primary.main,\r\n          borderRadius: 1.5,\r\n          width: \"max-content\",\r\n        }}\r\n      >\r\n        <Stack spacing={2}>\r\n          <Stack\r\n            p={2}\r\n            direction=\"row\"\r\n            spacing={3}\r\n            alignItems=\"center\"\r\n            sx={{\r\n              backgroundColor: theme.palette.background.paper,\r\n              borderRadius: 1,\r\n            }}\r\n          >\r\n            <Image size={48} />\r\n            <Typography variant=\"caption\">Abstract.png</Typography>\r\n            <IconButton>\r\n              <DownloadSimple />\r\n            </IconButton>\r\n          </Stack>\r\n          <Typography\r\n            variant=\"body2\"\r\n            color={el.incoming ? theme.palette.text : \"#fff\"}\r\n          >\r\n            {el.message}\r\n          </Typography>\r\n        </Stack>\r\n      </Box>\r\n      {menu && <MessageOption />}\r\n    </Stack>\r\n  );\r\n};\r\nconst LinkMsg = ({ el, menu }) => {\r\n  const theme = useTheme();\r\n  return (\r\n    <Stack direction=\"row\" justifyContent={el.incoming ? \"start\" : \"end\"}>\r\n      <Box\r\n        px={1.5}\r\n        py={1.5}\r\n        sx={{\r\n          backgroundColor: el.incoming\r\n            ? alpha(theme.palette.background.default, 1)\r\n            : theme.palette.primary.main,\r\n          borderRadius: 1.5,\r\n          width: \"max-content\",\r\n        }}\r\n      >\r\n        <Stack spacing={2}>\r\n          <Stack\r\n            p={2}\r\n            direction=\"column\"\r\n            spacing={3}\r\n            alignItems=\"start\"\r\n            sx={{\r\n              backgroundColor: theme.palette.background.paper,\r\n              borderRadius: 1,\r\n            }}\r\n          >\r\n            <Stack direction={\"column\"} spacing={2}>\r\n              <Embed\r\n                width=\"300px\"\r\n                isDark\r\n                url={`https://youtu.be/xoWxBR34qLE`}\r\n              />\r\n            </Stack>\r\n          </Stack>\r\n          <Typography\r\n            variant=\"body2\"\r\n            color={el.incoming ? theme.palette.text : \"#fff\"}\r\n          >\r\n            <div dangerouslySetInnerHTML={{ __html: el.message }}></div>\r\n          </Typography>\r\n        </Stack>\r\n      </Box>\r\n      {menu && <MessageOption />}\r\n    </Stack>\r\n  );\r\n};\r\nconst ReplyMsg = ({ el, menu }) => {\r\n  const theme = useTheme();\r\n  return (\r\n    <Stack direction=\"row\" justifyContent={el.incoming ? \"start\" : \"end\"}>\r\n      <Box\r\n        px={1.5}\r\n        py={1.5}\r\n        sx={{\r\n          backgroundColor: el.incoming\r\n            ? alpha(theme.palette.background.paper, 1)\r\n            : theme.palette.primary.main,\r\n          borderRadius: 1.5,\r\n          width: \"max-content\",\r\n        }}\r\n      >\r\n        <Stack spacing={2}>\r\n          <Stack\r\n            p={2}\r\n            direction=\"column\"\r\n            spacing={3}\r\n            alignItems=\"center\"\r\n            sx={{\r\n              backgroundColor: alpha(theme.palette.background.paper, 1),\r\n\r\n              borderRadius: 1,\r\n            }}\r\n          >\r\n            <Typography variant=\"body2\" color={theme.palette.text}>\r\n              {el.message}\r\n            </Typography>\r\n          </Stack>\r\n          <Typography\r\n            variant=\"body2\"\r\n            color={el.incoming ? theme.palette.text : \"#fff\"}\r\n          >\r\n            {el.reply}\r\n          </Typography>\r\n        </Stack>\r\n      </Box>\r\n      {menu && <MessageOption />}\r\n    </Stack>\r\n  );\r\n};\r\nconst Timeline = ({ el }) => {\r\n  const theme = useTheme();\r\n  return (\r\n    <Stack direction=\"row\" alignItems={\"center\"} justifyContent=\"space-between\">\r\n      <Divider width=\"46%\" />\r\n      <Typography variant=\"caption\" sx={{ color: theme.palette.text }}>\r\n        {el.text}\r\n      </Typography>\r\n      <Divider width=\"46%\" />\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport { Timeline, MediaMsg, LinkMsg, DocMsg, TextMsg, ReplyMsg };\r\n"],"names":["StyledBadge","styled","Badge","theme","backgroundColor","color","boxShadow","palette","background","paper","position","top","left","width","height","borderRadius","animation","border","content","transform","opacity","Conversation_Menu","title","dispatch","useDispatch","isMobile","useResponsive","useTheme","current_conversation","useSelector","state","conversation","direct_chat","conversationMenuAnchorEl","setConversationMenuAnchorEl","React","openConversationMenu","Boolean","handleCloseConversationMenu","Box","p","sx","mode","Stack","alignItems","direction","justifyContent","onClick","ToggleSidebar","spacing","overlap","anchorOrigin","vertical","horizontal","variant","Avatar","alt","name","src","img","Typography","IconButton","StartVideoCall","user_id","StartAudioCall","Divider","orientation","flexItem","id","undefined","event","currentTarget","Menu","MenuListProps","TransitionComponent","Fade","anchorEl","open","onClose","transformOrigin","map","el","MenuItem","minWidth","StyledInput","TextField","paddingTop","paddingBottom","Actions","icon","size","y","ChatInput","openPicker","setOpenPicker","setValue","value","inputRef","openActions","setOpenActions","onChange","target","fullWidth","placeholder","InputProps","disableUnderline","startAdornment","display","Tooltip","placement","Fab","InputAdornment","endAdornment","containsUrl","text","test","window","localStorage","getItem","sideBar","room_id","app","useState","useRef","style","zIndex","bottom","right","data","onEmojiSelect","emoji","input","current","selectionStart","selectionEnd","substring","handleEmojiClick","native","primary","main","socket","message","replace","url","conversation_id","from","to","type","Conversation","menu","conversations","current_messages","useEffect","find","console","log","FetchCurrentMessages","messages","SetCurrentConversation","idx","subtype","messageListRef","scrollTop","scrollHeight","maxHeight","ref","flexGrow","overflow","timeout","clickOnTrack","MessageOption","setAnchorEl","handleClose","px","Message_options","TextMsg","incoming","py","alpha","default","MediaMsg","DocMsg","LinkMsg","isDark","dangerouslySetInnerHTML","__html","ReplyMsg","reply","Timeline"],"sourceRoot":""}